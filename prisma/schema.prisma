generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}
model LinkCardGather {
  id        String         @id @default(auto()) @map("_id") @db.ObjectId
  userId String  @db.ObjectId
  user   User   @relation(fields: [userId], references: [id]) 
  LinkCard  LinkCard[]
  title     String
  description String
  Team String[]
  // userTeam User[] 
  createdAt DateTime   @default(now()) 
  open      Boolean    @default(false)
}


model LinkCard { 
  id          String            @id @default(auto()) @map("_id") @db.ObjectId
  title       String   
  LinkCardGatherID String  @db.ObjectId
  LinkCardGather   LinkCardGather   @relation(fields: [LinkCardGatherID], references: [id])      
  url         String
  description String
  image       String 
  createNameRole String
  createdAt   DateTime       @default(now()) 
}
model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([provider, providerAccountId])
}
model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  id String @id @default(auto())  @map("_id") @db.ObjectId
  identifier String  
  token      String   @unique
  expires    DateTime
  @@unique([identifier, token])
}
model User {
  id    String @id @default(auto())   @map("_id") @db.ObjectId()
  email String @unique
  name  String?
  image String?
  emailVerified DateTime?
  password String?
  session String?
  LinkCardGather LinkCardGather[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Session Session[]
  Account Account[]
}
